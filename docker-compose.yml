version: '3.3'

services:
#  proxy:
#      container_name: dhf-proxy
#      build:
#          context: dhf_devops/base/nginx
#          dockerfile: Dockerfile
#      volumes:
#         - /var/run/docker.sock:/tmp/docker.sock:ro
#         - ./nginx.tmpl:/app/nginx.tmpl
#      ports:
#         - "80:80"
  web-app:
      build: 
        context: dhf_frontend
        dockerfile: Dockerfile
      container_name: web-app
      restart: always
      depends_on:
#         - proxy
         - trader-api
      links:
         - trader-api
         - smart-contract-api
      volumes:
         # files
         - ./dhf_frontend/configs:/app/configs
         - ./dhf_frontend/dist:/app/dist
         - ./dhf_frontend/public:/app/public
         - ./dhf_frontend/scripts:/app/scripts
         - ./dhf_frontend/src:/app/src
         - ./dhf_frontend/package.json:/app/package.json
      environment:
         APP_ENV: development
         NODE_ENV: development
         VIRTUAL_PORT: 3000
         VIRTUAL_HOST: webapp.nyc
      ports:
        - "3000:3000"
      expose:
        - "3000"
      command:
        - npm 
        - start
  blackend-api:
      build: 
        context: dhf_backend
        dockerfile: Dockerfile
      container_name: blackend-api
      restart: always
      depends_on:
#         - proxy
         - mongo
         - trader-api
         - smart-contract-api
      links:
         - mongo
         - trader-api
         - smart-contract-api
      volumes:
         # files
         - ./dhf_backend/server:/app/server
         - ./dhf_backend/common:/app/common
         - ./dhf_backend/test:/app/test
         - ./dhf_backend/package.json:/app/package.json
         - ./dhf_backend/files/avatar:/app/files/avatar
      environment:
         APP_ENV: development
         NODE_ENV: development
         VIRTUAL_PORT: 9000
         VIRTUAL_HOST: api.blackend.nyc
      ports:
        - "9000:9000"
      expose:
        - "9000"
      command:
        - /app/node_modules/.bin/nodemon
        - .

  trader-api:
      build: 
        context: dhf_trader
        dockerfile: Dockerfile
      container_name: trader-api
      restart: always
      depends_on:
#         - proxy
         - mongo
      links:
         - mongo
      volumes:
         # files
         - ./dhf_trader/server:/app/server
         - ./dhf_trader/common:/app/common
         - ./dhf_trader/configs:/app/configs
         - ./dhf_trader/scripts:/app/scripts
         - ./dhf_trader/test:/app/test
         - ./dhf_trader/package.json:/app/package.json
      environment:
         APP_ENV: development
         NODE_ENV: development
         VIRTUAL_PORT: 9001
         VIRTUAL_HOST: api.trader.nyc
      ports:
        - "9001:9001"
      expose:
        - "9001"
      command:
        - /app/node_modules/.bin/nodemon
        - server/server.js

  smart-contract-api:
    build: 
      context: dhf_smartcontract/backend
      dockerfile: Dockerfile
    container_name: smartcontract-api
    restart: always
    depends_on:
#         - proxy
       - mongo
    links:
       - mongo
    volumes:
       # files
       - ./dhf_smartcontract/backend/logics:/app/logics
       - ./dhf_smartcontract/backend/common:/app/common
       - ./dhf_smartcontract/backend/scripts:/app/scripts
       - ./dhf_smartcontract/backend/config.js:/app/config.js
       - ./dhf_smartcontract/backend/router.js:/app/router.js
       - ./dhf_smartcontract/backend/server.js:/app/server.js
       - ./dhf_smartcontract/backend/package.json:/app/package.json
    environment:
       APP_ENV: development
       NODE_ENV: development
       VIRTUAL_PORT: 9003
       VIRTUAL_HOST: api.smart-contract.nyc
    ports:
      - "9003:9003"
    expose:
      - "9003"
    command:
      - /app/node_modules/.bin/nodemon
      - server.js

   # DATABASE ---------------------------------------------------
  mongo:
    image: 'mongo:latest'
    container_name: dhf-mongodb
    restart: always
    command: mongod --port 27018
    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: dhfadmin
      MONGO_INITDB_DATABASE: dhf-platform
    volumes:
      - /data/mongodb:/data/db
#      - mongodb_config:/data/configdb
    ports: 
      - "27018:27018"
#    command: mongo dhf-platform --eval "db.dropDatabase();"
